pipeline{
    agent any
    triggers {
        pollSCM("* * * * *")
    }
    stages{
        stage('Build') {
            steps {
                echo "docker build"
                sh 'docker build -t massasoftapi .'
            }
        }
        
        stage('Test') {
            steps {
                echo "test"
                sh 'docker run --rm massasoftapi dotnet test'
            }
        }
        
        stage('Migrate') {
            steps {
                echo "migration with flyway"
                sh 'docker run --rm --network="host" -v "$(pwd)/db/migrations:/flyway/sql" flyway/flyway:7.15.0 -user=massasoftuser -password=password -url=jdbc:mysql://localhost:3306/Massasoft -locations=filesystem:/flyway/sql migrate'
            }
        }
        
        stage('Push') {
            steps {
                echo "push to docker hub"
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                }
                sh 'docker tag massasoftapi $DOCKER_USERNAME/massasoftapi'
                sh 'docker push $DOCKER_USERNAME/massasoftapi'
            }
        }
    }
    post {
        cleanup {
            echo "cleaning up the docker environment"
            sh script: "docker-compose -f MassasoftApi/docker-compose.yml down", returnStatus:true
        }
    }
}